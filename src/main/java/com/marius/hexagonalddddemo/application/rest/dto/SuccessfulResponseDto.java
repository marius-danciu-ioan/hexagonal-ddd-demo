package com.marius.hexagonalddddemo.application.rest.dto;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.marius.hexagonalddddemo.infrastructure.constants.Constants;
import io.swagger.v3.oas.annotations.media.Schema;
import lombok.*;
import lombok.experimental.FieldDefaults;
import lombok.extern.jackson.Jacksonized;


/**
 * Class used in endpoint responses.
 * All endpoints will have the same output structure, which is as follows:
 * 		- HTTP status description
 * 		- Message describing how the execution of the requested action has gone
 * 		- Message identifier
 * 		- Data: wrapper that will contain the information returned by each endpoint
 */
@AllArgsConstructor
@Getter
@FieldDefaults(makeFinal = true, level = AccessLevel.PRIVATE)
@Setter(value = AccessLevel.NONE)
@Jacksonized
@Builder
public class SuccessfulResponseDto<T> {

    // Final result after performing the requested operation
    @JsonProperty(Constants.STATUS)
    @Schema(name = Constants.STATUS,
            example = "OK",
            type = Constants.OPEN_API_STRING_TYPE,
            requiredMode = Schema.RequiredMode.REQUIRED,
            description = "HTTP status description")
    String status;

    // Identifier generated by the service representing the final result of the operation performed
    @JsonProperty(Constants.MESSAGE_ID)
    @Schema(name = Constants.MESSAGE_ID,
            example = "00",
            type = Constants.OPEN_API_STRING_TYPE,
            requiredMode = Schema.RequiredMode.REQUIRED,
            description = "Id generated by the application representing the response status")
    String messageId;

    // Message with the description associated with the message id
    @JsonProperty(Constants.MESSAGE)
    @Schema(name = Constants.MESSAGE,
            example = "OK",
            type = Constants.OPEN_API_STRING_TYPE,
            requiredMode = Schema.RequiredMode.REQUIRED,
            description = "Message description associated with the message id")
    String message;

    // Information returned by the endpoint called
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonProperty(Constants.DATA)
    T data;

}
